package shipDock.framework.application.utils
{
	import shipDock.framework.application.SDConfig;
	import starling.display.DisplayObject;
	import starling.display.DisplayObjectContainer;
	import flash.display.DisplayObjectContainer;
	
	/**
	 * ...
	 * @author shaoxin.ji
	 */
	public class DisplayUtils
	{
		
		public static function setPovit(target:DisplayObject, x:Number, y:Number):void
		{
			target.pivotX = x;
			target.pivotY = y;
		}
		
		public static function rePivot(target:DisplayObject):void
		{
			target.pivotX = target.width >> 1;
			target.pivotY = target.height >> 1;
		}
		
		/**
		 * 居中
		 *
		 * @param	target
		 * @param	w 相对此宽度居中
		 * @param	h 相对此高度居中
		 */
		public static function alignCenter(target:DisplayObject, w:Number = 0, h:Number = 0):void
		{
			alignH(target, w);
			alignV(target, h);
		}
		
		public static function alignH(target:DisplayObject, w:Number = 0):void
		{
			if (target == null)
			{
				return;
			}
			if (w != 0)
			{
				target.x = (w - int(target.width * SDConfig.globalScale)) / 2 - SDConfig.mainOffsetX;
			}
		}
		
		public static function alignV(target:DisplayObject, h:Number = 0):void
		{
			if (target == null)
			{
				return;
			}
			if (h != 0)
			{
				target.y = (h - int(target.height * SDConfig.globalScale)) / 2 - SDConfig.mainOffsetY;
			}
		}
		
		public static function getChildByPath(container:*, path:String = ""):*
		{
			var result:*;
			if ((container is starling.display.DisplayObjectContainer) || (container is flash.display.DisplayObjectContainer))
			{
				var list:Array = path.split("/");
				while (list.length > 0)
				{
					var name:String = list.shift();
					result = container.getChildByName(name);
				}
			}
			return result;
		}
		
		public function DisplayUtils()
		{
		
		}
	
	}

}